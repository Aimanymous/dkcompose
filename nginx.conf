events {
    worker_connections 1024;  # Adjust based on your server's capacity
}

http {
    # Define upstream for load balancing
    upstream wordpress_backend {
        server wordpress1:80;  # Adjust the hostname to your actual WordPress server
        server wordpress2:80;  # Another WordPress instance for load balancing
        # Add more servers as needed
    }

    server {
        listen 80;
        server_name localhost;  # Adjust if using a specific domain name

        # Redirect all HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost;  # Adjust if using a specific domain name

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        # Specify SSL protocols
        ssl_protocols TLSv1.2 TLSv1.3;

        # Updated SSL ciphers
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';

        location / {
            # Proxy pass to the upstream wordpress_backend
            proxy_pass http://wordpress_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable WebSocket support if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}